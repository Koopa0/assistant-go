package templates

import (
    "fmt"
)

type InfrastructurePageData struct {
    AppLayoutData
    Clusters      []ClusterItem
    ActiveCluster *ClusterItem
    Resources     InfrastructureResources
    Metrics       InfrastructureMetrics
}

type ClusterItem struct {
    ID          string
    Name        string
    Provider    string // "k8s", "docker", "ecs", "gke"
    Status      string // "healthy", "warning", "critical", "unknown"
    NodeCount   int
    PodCount    int
    Namespace   string
}

type InfrastructureResources struct {
    Nodes       []NodeItem
    Pods        []PodItem
    Services    []ServiceItem
    Deployments []DeploymentItem
}

type NodeItem struct {
    Name         string
    Status       string // "ready", "not-ready", "unknown"
    Role         string
    Version      string
    CPUCapacity  string
    MemCapacity  string
    CPUUsage     float32
    MemUsage     float32
    PodCount     int
}

type PodItem struct {
    Name         string
    Namespace    string
    Status       string // "running", "pending", "failed", "succeeded"
    Node         string
    RestartCount int
    Age          string
    CPUUsage     string
    MemUsage     string
}

type ServiceItem struct {
    Name      string
    Namespace string
    Type      string // "ClusterIP", "NodePort", "LoadBalancer"
    ClusterIP string
    Ports     []string
    Age       string
}

type DeploymentItem struct {
    Name          string
    Namespace     string
    Replicas      string // "2/3"
    UpToDate      int
    Available     int
    Age           string
    Status        string // "healthy", "updating", "error"
}

type InfrastructureMetrics struct {
    CPUUsage    float32
    MemoryUsage float32
    NetworkIn   string
    NetworkOut  string
    DiskUsage   float32
    ErrorRate   float32
}

templ InfrastructureMonitorPage(data InfrastructurePageData) {
    @AppLayout(data.AppLayoutData, infrastructureContent(data))
}

templ infrastructureContent(data InfrastructurePageData) {
    <div class="infrastructure-monitor">
        <!-- Header Section -->
        <div class="page-header">
            <div class="header-content">
                <h1 class="page-title">Infrastructure Monitor</h1>
                <p class="page-subtitle">Kubernetes and Docker container management</p>
            </div>
            <div class="header-actions">
                <button class="btn-text" onclick="showAddClusterModal()">
                    <span class="material-icons-round">add_circle</span>
                    Add Cluster
                </button>
                <button class="btn-primary" onclick="refreshMetrics()">
                    <span class="material-icons-round">refresh</span>
                    Refresh
                </button>
            </div>
        </div>

        <!-- Metrics Overview -->
        <div class="metrics-overview">
            <div class="metric-card">
                <div class="metric-icon cpu">
                    <span class="material-icons-round">memory</span>
                </div>
                <div class="metric-info">
                    <h4>CPU Usage</h4>
                    <div class="metric-value">{ fmt.Sprintf("%.1f%%", data.Metrics.CPUUsage) }</div>
                    <div class="metric-chart">
                        <div class="chart-bar" style={ fmt.Sprintf("width: %.1f%%", data.Metrics.CPUUsage) }></div>
                    </div>
                </div>
            </div>

            <div class="metric-card">
                <div class="metric-icon memory">
                    <span class="material-icons-round">storage</span>
                </div>
                <div class="metric-info">
                    <h4>Memory Usage</h4>
                    <div class="metric-value">{ fmt.Sprintf("%.1f%%", data.Metrics.MemoryUsage) }</div>
                    <div class="metric-chart">
                        <div class="chart-bar" style={ fmt.Sprintf("width: %.1f%%", data.Metrics.MemoryUsage) }></div>
                    </div>
                </div>
            </div>

            <div class="metric-card">
                <div class="metric-icon network">
                    <span class="material-icons-round">swap_vert</span>
                </div>
                <div class="metric-info">
                    <h4>Network I/O</h4>
                    <div class="metric-value">
                        <span class="in">↓ { data.Metrics.NetworkIn }</span>
                        <span class="out">↑ { data.Metrics.NetworkOut }</span>
                    </div>
                </div>
            </div>

            <div class="metric-card">
                <div class="metric-icon disk">
                    <span class="material-icons-round">hard_drive</span>
                </div>
                <div class="metric-info">
                    <h4>Disk Usage</h4>
                    <div class="metric-value">{ fmt.Sprintf("%.1f%%", data.Metrics.DiskUsage) }</div>
                    <div class="metric-chart">
                        <div class="chart-bar" style={ fmt.Sprintf("width: %.1f%%", data.Metrics.DiskUsage) }></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="infrastructure-grid">
            <!-- Left Panel: Clusters -->
            <div class="clusters-panel">
                <div class="panel-header">
                    <h3>Clusters</h3>
                </div>
                <div class="clusters-list">
                    for _, cluster := range data.Clusters {
                        <div class={ "cluster-item", templ.KV("active", data.ActiveCluster != nil && data.ActiveCluster.ID == cluster.ID) } 
                             data-cluster-id={ cluster.ID }
                             onclick="selectCluster(this.dataset.clusterId)">
                            <div class="cluster-header">
                                <div class="cluster-info">
                                    <h4>{ cluster.Name }</h4>
                                    <span class="cluster-provider">{ cluster.Provider }</span>
                                </div>
                                <span class={ "status-badge", cluster.Status }>
                                    { cluster.Status }
                                </span>
                            </div>
                            <div class="cluster-stats">
                                <span class="stat">
                                    <span class="material-icons-round">dns</span>
                                    { fmt.Sprintf("%d nodes", cluster.NodeCount) }
                                </span>
                                <span class="stat">
                                    <span class="material-icons-round">widgets</span>
                                    { fmt.Sprintf("%d pods", cluster.PodCount) }
                                </span>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Center Panel: Resources -->
            <div class="resources-panel">
                <div class="resource-tabs">
                    <button class="tab-button active" onclick="showResourceTab('nodes')">
                        <span class="material-icons-round">dns</span>
                        Nodes
                    </button>
                    <button class="tab-button" onclick="showResourceTab('pods')">
                        <span class="material-icons-round">widgets</span>
                        Pods
                    </button>
                    <button class="tab-button" onclick="showResourceTab('services')">
                        <span class="material-icons-round">api</span>
                        Services
                    </button>
                    <button class="tab-button" onclick="showResourceTab('deployments')">
                        <span class="material-icons-round">rocket_launch</span>
                        Deployments
                    </button>
                </div>

                <!-- Nodes Tab -->
                <div id="nodes-tab" class="resource-content active">
                    <div class="resource-list">
                        for _, node := range data.Resources.Nodes {
                            <div class="resource-item node">
                                <div class="resource-header">
                                    <div class="resource-info">
                                        <h4>{ node.Name }</h4>
                                        <div class="resource-meta">
                                            <span>{ node.Role }</span>
                                            <span>{ node.Version }</span>
                                        </div>
                                    </div>
                                    <span class={ "status-indicator", node.Status }>{ node.Status }</span>
                                </div>
                                <div class="resource-metrics">
                                    <div class="metric">
                                        <span class="metric-label">CPU</span>
                                        <div class="metric-bar">
                                            <div class="metric-fill cpu" style={ fmt.Sprintf("width: %.1f%%", node.CPUUsage) }></div>
                                        </div>
                                        <span class="metric-text">{ fmt.Sprintf("%.1f%%", node.CPUUsage) }</span>
                                    </div>
                                    <div class="metric">
                                        <span class="metric-label">Memory</span>
                                        <div class="metric-bar">
                                            <div class="metric-fill memory" style={ fmt.Sprintf("width: %.1f%%", node.MemUsage) }></div>
                                        </div>
                                        <span class="metric-text">{ fmt.Sprintf("%.1f%%", node.MemUsage) }</span>
                                    </div>
                                </div>
                                <div class="resource-details">
                                    <span>Capacity: { node.CPUCapacity } CPU, { node.MemCapacity } Memory</span>
                                    <span>Pods: { fmt.Sprintf("%d", node.PodCount) }</span>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Pods Tab -->
                <div id="pods-tab" class="resource-content" style="display: none;">
                    <div class="resource-table">
                        <table>
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Namespace</th>
                                    <th>Status</th>
                                    <th>Node</th>
                                    <th>Restarts</th>
                                    <th>Age</th>
                                    <th>CPU</th>
                                    <th>Memory</th>
                                </tr>
                            </thead>
                            <tbody>
                                for _, pod := range data.Resources.Pods {
                                    <tr>
                                        <td class="pod-name">{ pod.Name }</td>
                                        <td>{ pod.Namespace }</td>
                                        <td>
                                            <span class={ "status-badge", pod.Status }>{ pod.Status }</span>
                                        </td>
                                        <td>{ pod.Node }</td>
                                        <td>{ fmt.Sprintf("%d", pod.RestartCount) }</td>
                                        <td>{ pod.Age }</td>
                                        <td>{ pod.CPUUsage }</td>
                                        <td>{ pod.MemUsage }</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Services Tab -->
                <div id="services-tab" class="resource-content" style="display: none;">
                    <div class="resource-list">
                        for _, service := range data.Resources.Services {
                            <div class="resource-item service">
                                <div class="resource-header">
                                    <div class="resource-info">
                                        <h4>{ service.Name }</h4>
                                        <span class="resource-namespace">{ service.Namespace }</span>
                                    </div>
                                    <span class="service-type">{ service.Type }</span>
                                </div>
                                <div class="service-details">
                                    <div class="detail-row">
                                        <span class="detail-label">Cluster IP:</span>
                                        <span class="detail-value">{ service.ClusterIP }</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">Ports:</span>
                                        <span class="detail-value">
                                            for i, port := range service.Ports {
                                                if i > 0 {
                                                    , { " " }
                                                }
                                                { port }
                                            }
                                        </span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">Age:</span>
                                        <span class="detail-value">{ service.Age }</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Deployments Tab -->
                <div id="deployments-tab" class="resource-content" style="display: none;">
                    <div class="resource-list">
                        for _, deployment := range data.Resources.Deployments {
                            <div class="resource-item deployment">
                                <div class="resource-header">
                                    <div class="resource-info">
                                        <h4>{ deployment.Name }</h4>
                                        <span class="resource-namespace">{ deployment.Namespace }</span>
                                    </div>
                                    <span class={ "status-indicator", deployment.Status }>
                                        { deployment.Status }
                                    </span>
                                </div>
                                <div class="deployment-details">
                                    <div class="replicas-info">
                                        <span class="material-icons-round">content_copy</span>
                                        <span>Replicas: { deployment.Replicas }</span>
                                    </div>
                                    <div class="deployment-stats">
                                        <span>Up-to-date: { fmt.Sprintf("%d", deployment.UpToDate) }</span>
                                        <span>Available: { fmt.Sprintf("%d", deployment.Available) }</span>
                                        <span>Age: { deployment.Age }</span>
                                    </div>
                                </div>
                                <div class="deployment-actions">
                                    <button class="btn-icon" onclick="scaleDeployment(this)" data-deployment={ deployment.Name }>
                                        <span class="material-icons-round">expand</span>
                                    </button>
                                    <button class="btn-icon" onclick="restartDeployment(this)" data-deployment={ deployment.Name }>
                                        <span class="material-icons-round">refresh</span>
                                    </button>
                                    <button class="btn-icon" onclick="viewDeploymentLogs(this)" data-deployment={ deployment.Name }>
                                        <span class="material-icons-round">description</span>
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Right Panel: Actions & Alerts -->
            <div class="actions-panel">
                <div class="panel-section">
                    <h3>Quick Actions</h3>
                    <div class="quick-actions">
                        <button class="action-button" onclick="createResource()">
                            <span class="material-icons-round">add</span>
                            Create Resource
                        </button>
                        <button class="action-button" onclick="applyManifest()">
                            <span class="material-icons-round">upload_file</span>
                            Apply Manifest
                        </button>
                        <button class="action-button" onclick="viewLogs()">
                            <span class="material-icons-round">article</span>
                            View Logs
                        </button>
                        <button class="action-button" onclick="openTerminal()">
                            <span class="material-icons-round">terminal</span>
                            Terminal
                        </button>
                    </div>
                </div>

                <div class="panel-section">
                    <h3>Recent Alerts</h3>
                    <div class="alerts-list">
                        <div class="alert-item warning">
                            <span class="material-icons-round">warning</span>
                            <div class="alert-content">
                                <h5>High Memory Usage</h5>
                                <p>Node worker-2 is using 92% memory</p>
                                <span class="alert-time">5 minutes ago</span>
                            </div>
                        </div>
                        <div class="alert-item error">
                            <span class="material-icons-round">error</span>
                            <div class="alert-content">
                                <h5>Pod Crash Loop</h5>
                                <p>api-server-7d9b4c8d5-xvlzk restarted 5 times</p>
                                <span class="alert-time">12 minutes ago</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}