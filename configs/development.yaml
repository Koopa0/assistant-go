# Assistant Development Configuration
mode: development
log_level: debug
log_format: text

database:
  url: "postgres://koopa@localhost:5432/goassistant?sslmode=disable"
  # PostgreSQL 17 optimized settings for development
  max_connections: 15          # Reduced for dev environment but still optimized
  min_connections: 3           # Keep some connections warm
  max_idle_time: "10m"         # Close idle connections
  max_lifetime: "30m"          # Shorter rotation for dev
  connect_timeout: "5s"
  migrations_path: "internal/storage/postgres/migrations"
  enable_logging: true         # Keep logging enabled for dev

server:
  address: ":8080"
  read_timeout: "10s"
  write_timeout: "10s"
  idle_timeout: "60s"
  shutdown_timeout: "30s"
  enable_tls: false
  static_dir: "internal/web/static"
  templates_dir: "internal/web/templates"
  rate_limit:
    enabled: true
    requests_per_second: 10
    burst_size: 20

cli:
  history_file: ".goassistant_history_dev"
  max_history_size: 1000
  enable_colors: true
  prompt_template: "Assistant[dev]> "

ai:
  default_provider: "claude"
  claude:
    api_key: "${CLAUDE_API_KEY}"  # Will be overridden by environment variable
    model: "claude-3-sonnet-20240229"
    max_tokens: 4096
    temperature: 0.7
    base_url: "https://api.anthropic.com"
  gemini:
    api_key: "${GEMINI_API_KEY}"  # Will be overridden by environment variable
    model: "gemini-pro"
    max_tokens: 4096
    temperature: 0.7
    base_url: "https://generativelanguage.googleapis.com"
  embeddings:
    provider: "claude"
    model: "text-embedding-ada-002"
    dimensions: 1536

tools:
  search:
    searxng_url: "http://localhost:8888"
    timeout: "30s"
    max_results: 10
    enable_cache: true
    cache_ttl: "1h"
  
  postgres:
    query_timeout: "30s"
    max_query_size: 1048576
    enable_explain: true
  
  kubernetes:
    namespace: "default"
    timeout: "30s"
    enable_metrics: true
  
  docker:
    host: "unix:///var/run/docker.sock"
    api_version: "1.41"
    timeout: "30s"
    tls_verify: false
  
  cloudflare:
    # API credentials should be set via environment variables
  
  langchain:
    enable_memory: true
    memory_size: 10
    max_iterations: 5
    timeout: "60s"

security:
  jwt_expiration: "24h"
  rate_limit_rps: 100
  rate_limit_burst: 200
  enable_cors: true
  allowed_origins:
    - "http://localhost:3000"
    - "http://localhost:8080"
    - "http://127.0.0.1:3000"
    - "http://127.0.0.1:8080"
